/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package menuadmin.tampilan;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import uas.Koneksi;

/**
 *
 * @author adhwa
 */
public class datauser extends javax.swing.JFrame {

    /**
     * Creates new form datauser
     */
    public datauser() {
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);   //melakukan layar full
        this.setUndecorated(true);
        initComponents();
        tampilkanData();
    }

    private void tampilkanData() {
        try {
            // Hubungkan ke database
            Koneksi db = new Koneksi();
            Connection conn = db.connect();

            // Query untuk mengambil data dari tabel users
            String sql = "SELECT id_user, username, email, role, nomor_telepon, alamat FROM users";
            PreparedStatement stmt = conn.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();

            // Buat model untuk JTable
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("ID User");
            model.addColumn("Username");
            model.addColumn("Email");
            model.addColumn("Role");
            model.addColumn("No Telp");
            model.addColumn("Alamat");

            // Loop hasil query dan tambahkan ke model
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("id_user"),
                    rs.getString("username"),
                    rs.getString("email"),
                    rs.getString("role"),
                    rs.getString("nomor_telepon"),
                    rs.getString("alamat")
                });
            }

            // Set model ke JTable
            tabeluser.setModel(model);

            // Tutup koneksi
            conn.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Gagal menampilkan data: " + ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        exit = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabeluser = new rojerusan.RSTableMetro();
        btnedituser = new rojerusan.RSButtonIconD();
        btnhapustuser = new rojerusan.RSButtonIconD();
        btntambahtuser = new rojerusan.RSButtonIconD();
        btnbackdtuser = new rojerusan.RSButtonIconD();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(1279, 646));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(1279, 646));

        exit.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        exit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exit.setText("X");
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });

        tabeluser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabeluser.setFuenteFilas(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabeluser.setFuenteHead(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jScrollPane1.setViewportView(tabeluser);

        btnedituser.setBackground(new java.awt.Color(255, 153, 153));
        btnedituser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/menuadmin/gambar/icons8-edit-25.png"))); // NOI18N
        btnedituser.setText("Edit");
        btnedituser.setColorHover(new java.awt.Color(255, 204, 204));
        btnedituser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnedituserActionPerformed(evt);
            }
        });

        btnhapustuser.setBackground(new java.awt.Color(255, 153, 153));
        btnhapustuser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/menuadmin/gambar/icons8-delete-24.png"))); // NOI18N
        btnhapustuser.setText("Hapus");
        btnhapustuser.setColorHover(new java.awt.Color(255, 204, 204));
        btnhapustuser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhapustuserActionPerformed(evt);
            }
        });

        btntambahtuser.setBackground(new java.awt.Color(255, 153, 153));
        btntambahtuser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/menuadmin/gambar/icons8-create-24.png"))); // NOI18N
        btntambahtuser.setText("Tambah");
        btntambahtuser.setColorHover(new java.awt.Color(255, 204, 204));
        btntambahtuser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntambahtuserActionPerformed(evt);
            }
        });

        btnbackdtuser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/menuadmin/gambar/icons8-back-50.png"))); // NOI18N
        btnbackdtuser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackdtuserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnbackdtuser, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnedituser, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnhapustuser, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btntambahtuser, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1249, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 10, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnbackdtuser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnedituser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnhapustuser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btntambahtuser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(82, 82, 82))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnhapustuserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhapustuserActionPerformed
        try {
            // Pastikan ada baris yang dipilih
            int row = tabeluser.getSelectedRow();
            if (row == -1) {
                JOptionPane.showMessageDialog(this, "Pilih data yang akan dihapus!");
                return;
            }

            // Ambil ID User dari tabel
            String idUser = tabeluser.getValueAt(row, 0).toString();

            // Konfirmasi penghapusan
            int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                // Hubungkan ke database
                Koneksi db = new Koneksi();
                Connection conn = db.connect();

                // Query untuk menghapus data
                String sql = "DELETE FROM users WHERE id_user = ?";
                PreparedStatement stmt = conn.prepareStatement(sql);
                stmt.setString(1, idUser);

                // Eksekusi query
                stmt.executeUpdate();

                // Tampilkan pesan sukses
                JOptionPane.showMessageDialog(this, "Data berhasil dihapus!");

                // Refresh tabel
                tampilkanData();

                conn.close();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Gagal menghapus data: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnhapustuserActionPerformed

    private void btntambahtuserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntambahtuserActionPerformed
        try {
            // Ambil input dari pengguna melalui dialog JOptionPane
            String username = JOptionPane.showInputDialog(this, "Masukkan Username:");
            if (username == null || username.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Username tidak boleh kosong!");
                return;
            }

            String password = JOptionPane.showInputDialog(this, "Masukkan Password:");
            if (password == null || password.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Password tidak boleh kosong!");
                return;
            }

            String email = JOptionPane.showInputDialog(this, "Masukkan Email:");
            if (email == null || email.trim().isEmpty() || !email.matches("^[A-Za-z0-9+_.-]+@(.+)$")) {
                JOptionPane.showMessageDialog(this, "Email tidak valid!");
                return;
            }

            String role = JOptionPane.showInputDialog(this, "Masukkan Role (admin/customer):");
            if (role == null || role.trim().isEmpty() || (!role.equalsIgnoreCase("admin") && !role.equalsIgnoreCase("customer"))) {
                JOptionPane.showMessageDialog(this, "Role harus 'admin' atau 'customer'!");
                return;
            }

            String nomorTelepon = JOptionPane.showInputDialog(this, "Masukkan Nomor Telepon:");
            if (nomorTelepon == null || nomorTelepon.trim().isEmpty() || !nomorTelepon.matches("\\d+")) {
                JOptionPane.showMessageDialog(this, "Nomor telepon tidak valid!");
                return;
            }

            String alamat = JOptionPane.showInputDialog(this, "Masukkan Alamat:");
            if (alamat == null || alamat.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Alamat tidak boleh kosong!");
                return;
            }

            // Hubungkan ke database
            Koneksi db = new Koneksi();
            Connection conn = db.connect();

            // Query untuk menambahkan data baru
            String sql = "INSERT INTO users (id_user, username, password, email, role, nomor_telepon, alamat) VALUES (?, ?, MD5(?), ?, ?, ?, ?)";
            PreparedStatement stmt = conn.prepareStatement(sql);

            // Generate ID User
            String idUser = "U" + String.format("%03d", (int) (Math.random() * 1000));

            // Isi parameter query
            stmt.setString(1, idUser);
            stmt.setString(2, username);
            stmt.setString(3, password);
            stmt.setString(4, email);
            stmt.setString(5, role.toLowerCase());
            stmt.setString(6, nomorTelepon);
            stmt.setString(7, alamat);

            // Eksekusi query
            stmt.executeUpdate();

            // Tampilkan pesan sukses
            JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan!");

            // Refresh tabel
            tampilkanData();

            conn.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Gagal menambahkan data: " + ex.getMessage());
        }
    }//GEN-LAST:event_btntambahtuserActionPerformed

    private void btnedituserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnedituserActionPerformed
        try {
            // Pastikan ada baris yang dipilih
            int row = tabeluser.getSelectedRow();
            if (row == -1) {
                JOptionPane.showMessageDialog(this, "Pilih data yang akan diedit!");
                return;
            }

            // Ambil data dari tabel
            String idUser = tabeluser.getValueAt(row, 0).toString();
            String currentUsername = tabeluser.getValueAt(row, 1).toString();
            String currentEmail = tabeluser.getValueAt(row, 3).toString();
            String currentRole = tabeluser.getValueAt(row, 4).toString();
            String currentNoTelp = tabeluser.getValueAt(row, 5).toString();
            String currentAlamat = tabeluser.getValueAt(row, 6).toString();

            // Ambil input baru dari pengguna
            String newUsername = JOptionPane.showInputDialog(this, "Edit Username:", currentUsername);
            if (newUsername == null || newUsername.trim().isEmpty()) {
                return;
            }

            String newEmail = JOptionPane.showInputDialog(this, "Edit Email:", currentEmail);
            if (newEmail == null || newEmail.trim().isEmpty() || !newEmail.matches("^[A-Za-z0-9+_.-]+@(.+)$")) {
                return;
            }

            String newRole = JOptionPane.showInputDialog(this, "Edit Role (admin/customer):", currentRole);
            if (newRole == null || (!newRole.equalsIgnoreCase("admin") && !newRole.equalsIgnoreCase("customer"))) {
                return;
            }

            String newNoTelp = JOptionPane.showInputDialog(this, "Edit Nomor Telepon:", currentNoTelp);
            if (newNoTelp == null || newNoTelp.trim().isEmpty() || !newNoTelp.matches("\\d+")) {
                return;
            }

            String newAlamat = JOptionPane.showInputDialog(this, "Edit Alamat:", currentAlamat);
            if (newAlamat == null || newAlamat.trim().isEmpty()) {
                return;
            }

            // Hubungkan ke database
            Koneksi db = new Koneksi();
            Connection conn = db.connect();

            // Query untuk mengupdate data
            String sql = "UPDATE users SET username = ?, email = ?, role = ?, nomor_telepon = ?, alamat = ? WHERE id_user = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);

            // Isi parameter query
            stmt.setString(1, newUsername);
            stmt.setString(2, newEmail);
            stmt.setString(3, newRole.toLowerCase());
            stmt.setString(4, newNoTelp);
            stmt.setString(5, newAlamat);
            stmt.setString(6, idUser);

            // Eksekusi query
            stmt.executeUpdate();

            // Tampilkan pesan sukses
            JOptionPane.showMessageDialog(this, "Data berhasil diubah!");

            // Refresh tabel
            tampilkanData();

            conn.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Gagal mengubah data: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnedituserActionPerformed

    private void btnbackdtuserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackdtuserActionPerformed
        admin a = new admin();
        a.setVisible(true);
        this.dispose(); 
    }//GEN-LAST:event_btnbackdtuserActionPerformed

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(datauser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(datauser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(datauser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(datauser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new datauser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSButtonIconD btnbackdtuser;
    private rojerusan.RSButtonIconD btnedituser;
    private rojerusan.RSButtonIconD btnhapustuser;
    private rojerusan.RSButtonIconD btntambahtuser;
    private javax.swing.JLabel exit;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private rojerusan.RSTableMetro tabeluser;
    // End of variables declaration//GEN-END:variables
}
